name: cmake-build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: update dependencies
      run: sudo apt-get install software-properties-common && sudo apt update && sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt install -y g++-13 gcc-13 && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13 && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 13
    - name: configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
          name: eps-linux
          path: build/eps

  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
          name: eps-windows
          path: build/${{env.BUILD_TYPE}}/eps.exe

  create_release:
    if: github.event_name != 'pull_request'
    needs: [linux, windows]
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: get short commit sha
        id: get_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: download linux artifact
        uses: actions/download-artifact@v4
        with:
          name: eps-linux
          path: ./artifacts/linux

      - name: download windows artifact
        uses: actions/download-artifact@v4
        with:
          name: eps-windows
          path: ./artifacts/windows

      - name: create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.run_id }}.${{ github.run_number }}-${{ github.run_attempt }}"
          name: "auto-release [${{ github.run_id }}.${{ github.run_number }}-${{ github.run_attempt }}] [${{ env.short_sha }}]"
          draft: false
          prerelease: false
          files: |
            artifacts/linux/*
            artifacts/windows/*
          file_glob: true
          generate_release_notes: false
